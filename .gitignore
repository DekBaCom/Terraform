./Completed-Code/Azure/provider.tf
provider.tf
./Completed-Code/Azure/.terraform/providers/registry.terraform.io
./Completed-Code/Azure/.terraform.lock.hcl
./Completed-Code/Azure/terraform.tfstate
registry.terraform.io
.terraform.lock.hcl
terraform.tfstate
./Completed-Code/Azure/.terraform/
./Completed-Code/Azure_bk
Completed-Code/Azure/.terraform.lock.hcl
Completed-Code/Azure/.terraform/providers/registry.terraform.io
Completed-Code/Azure/terraform.tfstate
Completed-Code/Azure/.terraform/
.terraform/
Completed-Code/Azure/terraform.tfstate.backup
variables.tf
Completed-Code/Azure/variables.tf
Completed-Code/Azure/terraform.tfstate.backup
Completed-Code/Azure/main.tf
Lab-import/provider.tf
Lab-import/.terraform
Lab-import/.terraform.lock.hcl
Lab-import/.terraform.lock.terraform.tfstate
Lab-Azure/lab-CreateVM/provider.tf
Lab-Azure/lab-CreateVM/.terraform
Lab-Azure/lab-CreateVM/.terraform.lock.terraform.tfstate
Lab-Azure/lab-CreateVM/.terraform.lock.hcl

# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log
terraform.tfstate.backup
# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc